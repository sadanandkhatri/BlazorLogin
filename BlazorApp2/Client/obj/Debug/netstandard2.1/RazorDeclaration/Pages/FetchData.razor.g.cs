// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorApp2.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using BlazorApp2.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using BlazorApp2.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Blazored.Modal;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\_Imports.razor"
using Blazored.Modal.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\Pages\FetchData.razor"
using BlazorApp2.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\Pages\FetchData.razor"
using Blazored.Toast.Configuration;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/fetchdata")]
    public partial class FetchData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 103 "C:\Users\LENOVO\source\repos\BlazorApp2\BlazorApp2\Client\Pages\FetchData.razor"
       
    private WeatherForecast[] forecasts;
    private string searchfilter = string.Empty;
    private List<WeatherForecast> filterdata;
    private bool isSortedAscending;
    private string activeSortColumn;
    int totalPages;
    int totalRecords;
    int curPage;
    int pagerSize;
    int pageSize;
    int startPage;
    int endPage;
    

    void showSummary(int id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(Summary.id), id);
        modal.Show<Summary>("Summary", parameters);
    }

    private void SortTable(string ColumnName)
    {
        if (ColumnName != activeSortColumn)
        {
            filterdata = filterdata.OrderBy(x =>
        x.GetType().GetProperty(ColumnName).GetValue(x, null)).ToList();
            isSortedAscending = true;
            activeSortColumn = ColumnName;
        }
        else
        {
            if (isSortedAscending)
            {
                filterdata = filterdata.OrderByDescending(x =>
        x.GetType().GetProperty(ColumnName).GetValue(x, null)).ToList();
            }
            else
            {
                filterdata = filterdata.OrderBy(x =>
        x.GetType().GetProperty(ColumnName).GetValue(x, null)).ToList();
            }
            isSortedAscending = !isSortedAscending;
        }


    }

    private string SetSortIcon(string columnName)
    {
        if (activeSortColumn != columnName)
        {
            return string.Empty;
        }
        if (isSortedAscending)
        {
            return "fa-sort-up";
        }
        else
        {
            return "fa-sort-down";
        }
    }

    protected override async Task OnInitializedAsync()
    {
        pagerSize = 4;
        pageSize = 5;
        curPage = 1;
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        this.filterdata = forecasts//.ToList();
           .Skip((curPage - 1) * pageSize).Take(pageSize).ToList();
        totalRecords =  forecasts.Count();
        totalPages = (int)Math.Ceiling(totalRecords / (decimal)pageSize);
        SetPagerSize("forward");
    }



    private void Clear()
    {
        this.searchfilter = string.Empty;
        this.filterdata = forecasts//.ToList();
           .Skip((curPage - 1) * pageSize).Take(pageSize).ToList();
        //Console.WriteLine(filterdata);
    }

    private void Filter()
    {
        toastService.ShowSuccess("Filtering Stared");
        //this.filterdata = forecasts.Where(x => x.Summary.Contains(searchfilter) || x.Date.ToString().Contains(searchfilter)
        //  || x.TemperatureC.ToString().Contains(searchfilter) || x.TemperatureF.ToString().Contains(searchfilter)).ToList();
        this.filterdata = Array.FindAll(forecasts, element => element.Summary.ToLower().Contains(searchfilter.ToLower())
        || element.TemperatureF.ToString().ToLower().Contains(searchfilter.ToLower())
        || element.TemperatureC.ToString().ToLower().Contains(searchfilter.ToLower())
        || element.Date.ToString().ToLower().Contains(searchfilter.ToLower())).ToList();

    }

    public  void refreshRecords(int currentPage)
    {
        filterdata = forecasts.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
        curPage = currentPage;
        this.StateHasChanged();
    }

    public void SetPagerSize(string direction)
    {
        if (direction == "forward" && endPage < totalPages)
        {
            startPage = endPage + 1;
            if (endPage + pagerSize < totalPages)
            {
                endPage = startPage + pagerSize - 1;
            }
            else
            {
                endPage = totalPages;
            }
            this.StateHasChanged();
        }
        else if (direction == "back" && startPage > 1)
        {
            endPage = startPage - 1;
            startPage = startPage - pagerSize;
        }
    }

    public void NavigateToPage(string direction)
    {
        if (direction == "next")
        {
            if (curPage < totalPages)
            {
                if (curPage == endPage)
                {
                    SetPagerSize("forward");
                }
                curPage += 1;
            }
        }
        else if (direction == "previous")
        {
            if (curPage > 1)
            {
                if (curPage == startPage)
                {
                    SetPagerSize("back");
                }
                curPage -= 1;
            }
        }
        refreshRecords(curPage);
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IModalService modal { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
